
The Nautilus DevOps team is working to deploy some tools in Kubernetes cluster. Some of the tools are licence based so that licence information needs to 
be stored securely within Kubernetes cluster. Therefore, the team wants to utilize Kubernetes secrets to store those secrets. 
Below you can find more details about the requirements:


We already have a secret key file ecommerce.txt under /opt location on jump host.
Create a secret named as ecommerce and it should contain the password/license-number present in ecommerce.txt file.

Also create a pod named secret-nautilus.

Configure pod's spec as container name should be secret-container-nautilus, image should be debian preferably with latest tag (remember to mention the tag with image). 
Use command '/bin/bash', '-c' and 'sleep 10000' for container. Mount a volume named as secret-volume-nautilus. 
The mount path should be /opt/apps and mode should be readOnly.

Mount the secret within this volume.

To verify you can exec into the container secret-container-nautilus, to check the secret key under the mounted path /opt/apps.

Secret type should be generic.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

Secret vs Configmap:

The major difference is, Secrets store data in base64 format meanwhile ConfigMaps store data in a plain text. 
If you have some critical data like, keys, passwords, service accounts credentials, db connection string, etc then you should always go for Secrets rather than Configs

Creating secret named ecommerce using the file in /opt:
---------------------------------------------------------

cd /opt

kubectl create secret generic ecommerce --from-file=password=./ecommerce.txt

to view the secret :
--------------------

kubectl get secrets

kubectl describe secrets ecommerce

to decode:
------------
thor@jump_host /opt$ kubectl get secret ecommerce -o jsonpath='{.data}'
{"password":"NWVjdXIzIQo="}

to decode the secret:
---------------------
thor@jump_host /opt$ echo 'NWVjdXIzIQo=' | base64 --decode
5ecur3!

comparing against the file for review:
-----------------------------------------
thor@jump_host /opt$ cat ecommerce.txt 
5ecur3!
thor@jump_host /opt$

to create pod with simple skeleton which you can edit to suit the task requirement:
-------------------------------------------------------------------------------------

kubectl run secret-nautilus --image=debian:latest --dry-run=client -o yaml > /home/thor/pod.yml



apiVersion: v1
kind: Pod
metadata:
  labels:
    run: pod
  name: secret-nautilus
spec:
  containers:
    - image: debian:latest
      name: secret-container-nautilus
      command: ['/bin/bash','-c']
      args: ['sleep 10000']
      volumeMounts: 
      - name: secret-volume-nautilus
        mountPath: "/opt/apps"
        readOnly: true
  volumes:
    - name: secret-volume-nautilus
      secret:
           secretName: ecommerce


thor@jump_host ~$ kubectl get pod
NAME              READY   STATUS    RESTARTS   AGE
secret-nautilus   1/1     Running   0          3m16s

thor@jump_host ~$ kubectl exec -ti secret-nautilus -- /bin/bash
root@secret-nautilus:/# ls
bin   dev  home  lib64  mnt  proc  run   srv  tmp  var
boot  etc  lib   media  opt  root  sbin  sys  usr
root@secret-nautilus:/# pwd
/
root@secret-nautilus:/# cd /opt 
root@secret-nautilus:/opt# cd apps
root@secret-nautilus:/opt/apps# ls -ltr
total 0
lrwxrwxrwx 1 root root 15 Mar 28 13:34 password -> ..data/password
root@secret-nautilus:/opt/apps# cat pa*
5ecur3!

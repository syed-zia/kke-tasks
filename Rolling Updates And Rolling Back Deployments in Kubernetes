There is a production deployment planned for next week. The Nautilus DevOps team wants to test the deployment update and rollback 
on Dev environment first so that they can identify the risks in advance. Below you can find more details about the plan they want to execute.


Create a namespace datacenter. Create a deployment called httpd-deploy under this new namespace, 
It should have one container called httpd, use httpd:2.4.25 image and 6 replicas. 
The deployment should use RollingUpdate strategy with maxSurge=1, and maxUnavailable=2.

Next upgrade the deployment to version httpd:2.4.43 using a rolling update.

Finally, once all pods are updated undo the update and roll back to the previous/original version.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

Solution:
========

to create deployment with 6 replicas

k create deployment httpd-deploy --image=httpd:2.4.24 --namespace=datacenter --replicas=6 --dry-run=client -o yaml > /home/thor/dep2.yml
                       |.                  |                  |                  |
                  deployment name.      image.            namespace            replicas
                  
  k create deployment httpd-deploy --image=httpd:2.4.24 \ --namespace=datacenter --replicas=6 
to get deployment :

=> Kubectl get deployments

to describe deployment:

=> kubectl describe deployment [deployment name]


Rolling update command:

=> kubectl set image deployment/[deployment_name] nginx=nginx:[new_version]


to check the rollout status:

=> kubectl rollout status deployment/[deployment_name]


Rolling Back The Kubernetes Deployment:

=> kubectl rollout history deployment/nginx-deployment --revision=[revision_number]

Rollout undo:

=> kubectl rollout undo deployment/nginx-deployment --to-revision=[revision_number]


There is a production deployment planned for next week. The Nautilus DevOps team wants to test the deployment update and rollback 
on Dev environment first so that they can identify the risks in advance. Below you can find more details about the plan they want to execute.


Create a namespace datacenter. Create a deployment called httpd-deploy under this new namespace, 
It should have one container called httpd, use httpd:2.4.25 image and 6 replicas. 
The deployment should use RollingUpdate strategy with maxSurge=1, and maxUnavailable=2.

Next upgrade the deployment to version httpd:2.4.43 using a rolling update.

Finally, once all pods are updated undo the update and roll back to the previous/original version.

Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.

Solution:
========

to create deployment with 6 replicas

k create deployment httpd-deploy --image=httpd:2.4.24 --namespace=datacenter --replicas=6 --dry-run=client -o yaml > /home/thor/dep2.yml
                       |.                  |                  |                  |
                  deployment name.      image.            namespace            replicas
                  
  k create deployment httpd-deploy --image=httpd:2.4.24 \ --namespace=datacenter --replicas=6 
  
  YAML file contents
  
  apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: httpd-deploy-1
  name: httpd-deploy
  namespace: datacenter
spec:
  replicas: 6
  selector:
    matchLabels:
      app: httpd-deploy-1
  strategy: 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
  template:
    metadata:
      labels:
        app: httpd-deploy-1
    spec:
      containers:
      - image: httpd:2.4.25
        name: httpd
        
        
to get deployment :

=> Kubectl get deployments --namespace=datacenter

to list the pods

Kubectl get pods --namespace=datacenter

to describe deployment:

=> kubectl describe deployment [deployment name]


Rolling update command:

=> kubectl set image deployment/[deployment_name] nginx=nginx:[new_version]

kubectl set image deployment/httpd-deploy httpd=httpd:2.4.43 --namespace=datacenter

verify:
thor@jump_host ~$ k get deployment --namespace=datacenter -o wide
NAME           READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES         SELECTOR
httpd-deploy   6/6     6            6           5m41s   httpd        httpd:2.4.43   app=httpd-deploy-1


to check the rollout status:

=> kubectl rollout status deployment/[deployment_name]

kubectl rollout status deployment/httpd-deploy --namespace=datacenter


Rolling Back The Kubernetes Deployment:

=> kubectl rollout history deployment/nginx-deployment --revision=[revision_number]

Rollout undo:

=> kubectl rollout undo deployment/nginx-deployment --to-revision=[revision_number]

kubectl rollout undo deployment/httpd-deploy --namespace=datacenter --to-revision=1

verify:

get deployment --namespace=datacenter -o wide

NAME           READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES         SELECTOR
httpd-deploy   6/6     6            6           7m37s   httpd        httpd:2.4.25   app=httpd-deploy-1

